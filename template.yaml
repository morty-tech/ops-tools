AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  ops-tools

  SAM Template for ops-tools

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 30

Resources:
  AnalyticsIdentifyLogsProcessorFunction:
    Type: AWS::Serverless::Function
    Properties:
      Architectures:
        - arm64
        - x86_64
      FunctionName: !Sub ${AWS::StackName}-analytics-identify-logs-processor
      Description: Derives Metrics from the logs of the analytics-identify service
      CodeUri: functions/logs_processor/
      Handler: app.lambda_handler
      Runtime: python3.9
      Events:
        AnalyticsIdentifyLogs:
          Type: CloudWatchLogs
          Properties:
            LogGroupName: /apps/production-services/analytics-identify
            FilterPattern: '[name = Median, stalelness,staleness_value,delimiter,funnel,sz,funnel_size,...]'

  ECRLifecycleManagerFunction:
    Type: AWS::Serverless::Function
    Properties:
      Architectures:
        - arm64
        - x86_64
      Description: Manages the Config of an ECR Repository on a CreateRepository event
      FunctionName: !Sub ${AWS::StackName}-ecr-lifecycle-manager
      CodeUri: functions/ecr_policy_manager/
      Handler: app.newRepoEventHandler
      Runtime: nodejs14.x
      Policies:
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - ecr:*
              Resource: "*"
      Events:
        CreateRepositoryEvent:
          Type: EventBridgeRule
          Properties:
            Pattern:
              source:
                - aws.ecr
              detail-type:
                - AWS API Call via CloudTrail
              detail:
                eventSource:
                  - ecr.amazonaws.com
                eventName:
                  - CreateRepository

  ECRLifecycleManagerSetAllFunction:
    Type: AWS::Serverless::Function
    Properties:
      Architectures:
        - arm64
        - x86_64
      Description: Manages the lifecycle of ECR images
      FunctionName: !Sub ${AWS::StackName}-ecr-lifecycle-manager-set-all
      CodeUri: functions/ecr_policy_manager/
      Handler: app.setAllHandler
      Runtime: nodejs14.x
      Policies:
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - ecr:*
              Resource: "*"

  ResourceGroup:
    Type: "AWS::ResourceGroups::Group"
    Properties:
      Name: !Sub ${AWS::StackName}-resource-group
      Description: !Sub "Resource Group for ${AWS::StackName}"
      ResourceQuery:
        Type: "CLOUDFORMATION_STACK_1_0"
        Query:
          ResourceTypeFilters:
            - "AWS::AllSupported"

Outputs:
  AnalyticsIdentifyLogsProcessorFunction:
    Description: "Analytics Identify Logs Processor Function ARN"
    Value: !GetAtt AnalyticsIdentifyLogsProcessorFunction.Arn
  AnalyticsIdentifyLogsProcessorFunctionIamRole:
    Description: "IAM Role created for Analytics Identify Logs Processor Function"
    Value: !GetAtt AnalyticsIdentifyLogsProcessorFunctionRole.Arn
